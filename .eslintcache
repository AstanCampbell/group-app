[{"/Users/astancampbell/group-app/src/index.js":"1","/Users/astancampbell/group-app/src/reportWebVitals.js":"2","/Users/astancampbell/group-app/src/App.js":"3","/Users/astancampbell/group-app/src/medication/audit/Audit.js":"4","/Users/astancampbell/group-app/src/medication/viewAudit/ViewAudit.js":"5","/Users/astancampbell/group-app/src/config.js":"6","/Users/astancampbell/group-app/src/medication/medicationLog/AddMedication.js":"7","/Users/astancampbell/group-app/src/medication/audit/AuditPreview.js":"8"},{"size":500,"mtime":1609501372773,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609501372776,"results":"11","hashOfConfig":"10"},{"size":1378,"mtime":1610068462448,"results":"12","hashOfConfig":"10"},{"size":3209,"mtime":1610068462450,"results":"13","hashOfConfig":"10"},{"size":1360,"mtime":1610068462461,"results":"14","hashOfConfig":"10"},{"size":117,"mtime":1610068462449,"results":"15","hashOfConfig":"10"},{"size":4023,"mtime":1610068462452,"results":"16","hashOfConfig":"10"},{"size":3826,"mtime":1610068462451,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"xqcrn5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"20"},"/Users/astancampbell/group-app/src/index.js",[],["40","41"],"/Users/astancampbell/group-app/src/reportWebVitals.js",[],"/Users/astancampbell/group-app/src/App.js",[],"/Users/astancampbell/group-app/src/medication/audit/Audit.js",["42","43"],"import React, { Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Audit.css';\nimport ReactDOM from 'react-dom'\n\nclass Audit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        name: '',\n        dayCount: '', \n        eveningCount: '', \n        staffId: '',\n        initialMedicationCount: ''};\n\n        this.create = this.create.bind(this);\n        this.inputChanged = this.inputChanged.bind(this);\n        \n  }\n  \n\n  inputChanged = (event) => {\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n\n//   componentDidMount() {\n//     // get all entities - GET\n//     fetch(\"http://localhost:8080\", {\n//   \"method\": \"GET\",\n//   \"headers\": {\n//     'Content-Type': 'application/json',\n//   }\n// })\n// .then(response => response.json())\n// .then(response => {\n//   this.setState({\n//     audits: response\n//   })\n// })\n// .catch(err => { console.log(err); \n// });\n\n//   }\n\ncreate(e) {\n    // add entity - POST\n    fetch(\"http://localhost:8080/addAudit\", {\n    \"method\": \"POST\",\n    \"headers\": {\n    \"content-type\": \"application/json\",\n    \"accept\": \"application/json\"\n  },\n  \"body\": JSON.stringify({\n    name: this.state.name,\n    dayCount: this.state.dayCount,\n    eveningCount: this.state.eveningCount,\n    initialMedicationCount: this.state.initialMedicationCount,\n    staffId: this.state.staffId\n  })\n\n})\n\n.then(response => response.json())\n.then(response => {\n  console.log(response)\n})\n.catch(error => {\n  console.log(error);\n});\n\n    e.preventDefault();\n  }\n\n\n  render(){\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <label className=\"input-group-text\">Resident Name </label>\n        <input className=\"form-control form-control-lg\" placeholder=\"enter resident name\"\n        type =\"text\" name=\"name\" onChange={this.inputChanged}\n        value={this.state.firstName}/><br/>\n\n        <label className=\"input-group-text\">Day Count </label>\n        <input className=\"form-control form-control-lg\" placeholder=\"enter medication intake\"\n        type =\"number\" name=\"dayCount\" onChange={this.inputChanged}\n        value={this.state.dayCount}/><br/>\n\n        <label className=\"input-group-text\">Evening Count </label>\n        <input className=\"form-control form-control-lg\" placeholder=\"enter medication intake\"\n        type =\"number\" name=\"eveningCount\" onChange={this.inputChanged}\n        value={this.state.eveningCount}/><br/>\n\n        <label className=\"input-group-text\">Initial Medication Count </label>\n        <input className=\"form-control form-control-lg\" placeholder=\"enter intial prescription count\"\n        type =\"number\" name=\"initialMedicationCount\" onChange={this.inputChanged}\n        value={this.state.initialMedicationCount}/><br/>\n\n        <label className=\"input-group-text\">Staff Id </label>\n        <input className=\"form-control form-control-lg\" placeholder=\"enter staff ID\"\n        type =\"text\" name=\"staffId\" onChange={this.inputChanged}\n          value={this.state.staffId}/><br/>\n\n        <input type=\"submit\" value=\"Submit Audit\"/>\n      </form>\n    );\n  } \n}\n//let domContainer = document.querySelector('#App');\n //ReactDOM.render(<Audit />, domContainer);\nexport default Audit;\n","/Users/astancampbell/group-app/src/medication/viewAudit/ViewAudit.js",["44","45"],"import React, { Component, useEffect } from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios';\nimport './ViewAudit.css'\nimport Loader from 'react-loader-spinner';\n\nexport default function ViewAudit() {\n  const [data, updateData] = React.useState([]);\n\n  let isLoading = true;\n\n  useEffect(()=>{\n    axios({\n      method: 'get',\n      url: '/Audit',\n    }).then(res=>{\n      console.log(res);\n      updateData(res.data)\n    });\n  },[]);\n\n  if (data.length > 0) isLoading = false;\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n      ) : (\n          <table className=\"table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th>Patient Audits</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data?.map(row => (\n                <tr key={row.id}>\n                  <td align=\"left\">{row.name}</td>\n                  <td align=\"left\">{row.staffId}</td>\n                  <td align=\"left\">{row.dayCount}</td>\n                  <td align=\"left\">{row.eveningCount}</td>\n                  <td align=\"left\">{row.initialMedicationCount}</td>\n                  <td align=\"left\">{row.date}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n      )}\n    </div>\n  );\n}","/Users/astancampbell/group-app/src/config.js",["46"],"export default{\n\n  mysql: {\n    host: 'localhost',\n    port : 8080,\n    database: 'care',\n    password: 'care'\n  }\n}\n","/Users/astancampbell/group-app/src/medication/medicationLog/AddMedication.js",["47","48","49","50","51"],"import React, {useState} from 'react';\n\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n//import {backendUrl} from \"../config\";\n\n//Modal is used to have a pop-up box\n//Form.Group controlId= is used for accessibility apparently https://react-bootstrap.github.io/components/forms/\n\nconst AddMedication = (props) => {\n    // const [medicationName, setMedicationName] = useState(\"\");\n    // const [prescriptionCount, setPrescriptionCount] = useState(\"\");\n    // const [description, setDescription] = useState(\"\");\n    // const [medicationClass, setMedicationClass] = useState(\"\");\n    // const [dosage, setDosage] = useState(\"\");\n    // const [pharmacyName, setPharmacyName] = useState(\"\");\n\n//     const submit = e => {\n//         e.preventDefault();\n//         const data = {name: medicationName, prescriptionCount, description, medicationClass, dosage, pharmacyName}\n//         console.log(data);\n//         // fetch(`${backendUrl}/medication`, {method: \"POST\", body: JSON.stringify(data), headers: {\"Content-Type\": \"application/json\"}});\n//         // props.handleSubmission();\n//     }\n\n//     return (\n//         <Modal show={props.show} onHide={props.handleClose}>\n//             <Modal.Header><Modal.Title>Add Medciation</Modal.Title></Modal.Header>\n//             <Modal.Body>\n//                 <Form>\n//                     <Form.Group controlId=\"formAddMedicationName\">\n//                         <Form.Label>Medication Name</Form.Label>\n//                         <Form.Control type=\"text\" placeholder=\"Enter medication name\"\n//                                       onChange={e => setMedicationName(e.target.value)} value={medicationName} />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formAddPrescriptionCount\">\n//                         <Form.Label>Prescription Count</Form.Label>\n//                         <Form.Control type=\"number\" placeholder=\"Enter number of tablets\"\n//                                       onChange={e => setPrescriptionCount(e.target.value)} value={prescriptionCount}\n//                         />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formDescription\">\n//                         <Form.Label>Description</Form.Label>\n//                         <Form.Control type=\"text\" placeholder=\"Enter description\"\n//                                       onChange={e => setDescription(e.target.value)} value={description}\n//                         />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formMedicationClass\">\n//                         <Form.Label>Medication Class</Form.Label>\n//                         <Form.Control type=\"text\" placeholder=\"Enter medication class\"\n//                                       onChange={e => setMedicationClass(e.target.value)} value={medicationClass}\n//                         />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formDosage\">\n//                         <Form.Label>Dosage</Form.Label>\n//                         <Form.Control type=\"text\" placeholder=\"Enter dosage\"\n//                                       onChange={e => setDosage(e.target.value)} value={dosage}\n//                         />\n//                     </Form.Group>\n//                     <Form.Group controlId=\"formPharmacyName\">\n//                         <Form.Label>Pharmacy Name</Form.Label>\n//                         <Form.Control type=\"text\" placeholder=\"Enter Pharmacy Name\"\n//                                       onChange={e => setPharmacyName(e.target.value)} value={pharmacyName}\n//                         />\n//                     </Form.Group>\n//                     <Button variant=\"primary\" onClick={e => submit(e)}>\n//                         Add new medication\n//                     </Button>\n//                 </Form>\n//             </Modal.Body>\n//         </Modal>\n//     );\n}\n\nexport default AddMedication;\n","/Users/astancampbell/group-app/src/medication/audit/AuditPreview.js",["52","53","54","55","56"],"'use strict';\nimport React, { Component, useEffect, useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nclass AuditPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audits: [],\n      name: '', \n      dayCount: ''\n    };\n\n    this.create = this.create.bind(this);\n    this.update = this.update.bind(this);\n    this.delete = this.delete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n//   componentDidMount() {\n//     // get all entities - GET\n//     fetch(\"http://localhost:8080\", {\n//   \"method\": \"GET\",\n//   \"headers\": {\n//     'Content-Type': 'application/json',\n//   }\n// })\n// .then(response => response.json())\n// .then(response => {\n//   this.setState({\n//     audits: response\n//   })\n// })\n// .catch(err => { console.log(err); \n// });\n\n//   }\n\n  create(e) {\n    // add entity - POST\n    fetch(\"http://localhost:8080/addAudit\", {\n  \"method\": \"POST\",\n  \"headers\": {\n    \"content-type\": \"application/json\",\n    \"accept\": \"application/json\"\n  },\n  \"body\": JSON.stringify({\n    name: this.state.name,\n    dayCount: this.state.dayCount\n  })\n})\n.then(response => response.json())\n.then(response => {\n  console.log(response)\n})\n.catch(error => {\n  console.log(error);\n});\n\n    e.preventDefault();\n  }\n\n  update(e) {\n    // update entity - PUT\n    e.preventDefault();\n  }\n  delete(e) {\n    // delete entity - DELETE\n    e.preventDefault();\n  }\n\n  handleChange(changeObject) {\n    this.setState(changeObject)\n  }\n  \n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <h1 className=\"display-4 text-center\">Make An API Call in React</h1>\n              <form className=\"d-flex flex-column\">\n                <legend className=\"text-center\">Add-Update-Delete Friend</legend>\n\n                <label htmlFor=\"name\">\n                  Patient Name:\n                  <input\n                    name=\"name\"\n                    id=\"name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.name}\n                    onChange={(e) => this.handleChange({ name: e.target.value })}\n                    required\n                    />\n                </label>\n                <label htmlFor=\"dayCount\">\n                  Day Count:\n                  <input\n                    name=\"dayCount\"\n                    id=\"dayCount\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={this.state.dayCount}\n                    onChange={(e) => this.handleChange({ dayCount: e.target.value })}\n                    required\n                    />\n                </label>\n                <label htmlFor=\"id\">\n                  Friend ID:\n                  <input\n                    name=\"id\"\n                    id=\"id\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.id}\n                    onChange={(e) => this.handleChange({ id: e.target.value })}\n                    />\n                </label>\n                <button className=\"btn btn-primary\" type='button' onClick={(e) => this.create(e)}>\n                  Add\n                </button>\n                <button className=\"btn btn-info\" type='button' onClick={(e) => this.update(e)}>\n                    Update\n                </button>\n                <button className=\"btn btn-danger\" type='button' onClick={(e) => this.delete(e)}>\n                    Delete\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n// let domContainer = document.querySelector('#App');\n// ReactDOM.render(<AuditPreview />, domContainer);\n\nexport default AuditPreview;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"66","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":1,"column":1,"nodeType":"69","endLine":9,"endColumn":2},{"ruleId":"61","severity":1,"message":"70","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"71","line":1,"column":16,"nodeType":"63","messageId":"64","endLine":1,"endColumn":24},{"ruleId":"61","severity":1,"message":"72","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"61","severity":1,"message":"73","line":4,"column":8,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"74","line":5,"column":8,"nodeType":"63","messageId":"64","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":1,"column":1,"nodeType":"77","messageId":"78","endLine":1,"endColumn":14,"fix":"79"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":17,"nodeType":"63","messageId":"64","endLine":2,"endColumn":26},{"ruleId":"61","severity":1,"message":"80","line":2,"column":28,"nodeType":"63","messageId":"64","endLine":2,"endColumn":37},{"ruleId":"61","severity":1,"message":"71","line":2,"column":39,"nodeType":"63","messageId":"64","endLine":2,"endColumn":47},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'render' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"83","text":"84"},"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],""]